Login Form

DOM references:

#username (input element for the username)
#password (input element for the password)
#login (form element that triggers login)
#login-error (div element for error message)
Logic:

Check the user credentials against an array of predefined users (users array).
If the username and password match a valid user:
Set currentUser to the matched user.
Call showDashboard() to transition to the dashboard view.
If any of the credentials are invalid, show an error message in #login-error.
Events:

On form submission (onsubmit event of the login form):
handleLogin(event) should be called, which itself checks for valid username and password.
If valid, switch to dashboard; if invalid, show an error.
Dashboard

DOM references:

#login-form - div that contains the login form
#dashboard - div that contains user's task manager and tasks
#user-name - span that shows username of the logged in user
#logout-btn - button that logs out user
#task-manager - section that contains all the task related elements like task list and form
#new-task-form (form to add a new task)
#task-list (ul element where tasks are displayed)
Logic:

When the user logs in successfully, showDashboard() is called, which hides the login form and shows the dashboard.
Call loadTasks() to load the tasks that belong to the currently logged-in user.
Events:

When the logout button is clicked (onclick event for #logout-btn):

Call logout(), which resets the currentUser and tasks data and toggles back to the login form.
Task Management

DOM references:

#task-text (input element for adding new tasks)
#task-list (ul element representing the tasks)
button elements within each task: Complete, Edit, Delete
Logic:

There is an array of tasks, each assigned to a particular username (the currently logged-in user).
A new task gets pushed into the array of tasks - with a unique id, using Date.now(), with a value of text, and completed - false by default.
The tasks can be marked as complete, edited, or deleted:
Complete/Undo: toggles the completed state of a task by using the strikethrough visual effect.
Edit: provides functionality to edit a task's text via a prompt and updates the task.
Delete: removes a task from the list.
Events:

On form submission, the onsubmit event for #new-task-form calls addTask(event) - adds a new task to the tasks array and reloads the task list.
On task completion toggle, the onclick event for the "Complete/Undo" button:
Call toggleComplete(taskId) that toggles the completed status of the task and reloads the task list.
On task edit (onclick event for the "Edit" button):
Call editTask(taskId) that prompts the user for new task text and updates the task.
On task deletion (onclick event for the "Delete" button):
Call removeTask(taskId) that removes the task from the tasks array and reloads the task list.
Logout

DOM references:

#login-form (div element to show the login form)
#dashboard (div element to hide the dashboard)
Logic:

On clicking the logout button, the logout() function is invoked.
It resets currentUser and tasks to null and [], respectively.
It toggles the view back to the login form and hides the dashboard.
Events:

On click of the logout button (onclick event for #logout-btn):

Invoke logout() to reset the session and go back to the login screen.
Rendering of Task List

DOM references:

#task-list (ul element where tasks will be listed)
Logic:

loadTasks() filters the array of tasks to only show tasks from the currently logged-in user (username).
For each task, a list item is created (li) and filled with:
The text of the task (task.text).
Completion, edit, and deletion action buttons for the task.
The button for completing a task toggles the completed state of the task, struck through if completed.
Events:

On load of the task, create a task item with action buttons for each task in the task list and append it to the DOM.
User Authentication
Users:
The users array holds the hardcoded user credentials - username and password. By default, there are two users:
user1 with password Password1
user2 with password Password123
If the entered credentials match one of the users in the array, the user is logged in, and the task dashboard is displayed.
If credentials are invalid, an error message is shown.
User Interface
Layout:
Initially, the login form is displayed.
After successful login, the dashboard containing task management features is displayed.
Design:
The login form has inputs for username and password with a submit button.
The dashboard displays a greeting message with the logged-in user's name and a task manager interface with an input for adding tasks, a task list, and action buttons.
Completed tasks are visual by including a strikethrough effect.